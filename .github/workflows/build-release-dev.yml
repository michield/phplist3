
name: Build Release - Dev

on: 
  push:
#    tags: testing-[1-9]+.[0-9]+.[0-9]+

jobs:
  test:
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false     
      matrix:   
        php-version: ['7.4']
        experimental: [false]

    steps:
      - uses: actions/checkout@v2

      - name: Find the version
        run: echo "RELEASE_VERSION=5.6.7-RC14" >> $GITHUB_ENV

      - name: Show the discovered version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          echo $GITHUB_REF
          echo ${{ env.GITHUB_REF }}

      - name: Set up S3cmd cli tool
        uses: s3-actions/s3cmd@v1.1
        with:
          provider: aws
          region: 'us-east-1'
          access_key: ${{ secrets.AWS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: create fake release file
        run: |
          cd $GITHUB_WORKSPACE
          cd ..
          zip -rq9 phplist-${RELEASE_VERSION}.zip phplist-${RELEASE_VERSION}
          tar cf phplist-${RELEASE_VERSION}.tar phplist-${RELEASE_VERSION}
          cd $GITHUB_WORKSPACE
          mv phplist-${RELEASE_VERSION}.* .
          ls -l 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          file: Dockerfile.release
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/phplist-dev:${{ env.RELEASE_VERSION }}
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
